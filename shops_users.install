<?php

/**
 * @file
 * Install, update and uninstall functions for the shops_users module.
 */

use Drupal\Core\Url;

/**
 * Implements hook_install().
 */
function shops_users_install() {
  $root_dir = getenv('PROJECT_DIR');
  $xml_uri = getenv('BUTCHERY_USERS_XML_URI') ?: getenv('SHOPS_USERS_XML_URI');
  $email_domain = getenv('SHOPS_USERS_EMAIL_DOMAIN');
  $logger = \Drupal::logger('shops_users');
  $configFactory = \Drupal::service('config.factory');
  $shopsUsersConfig = $configFactory->getEditable('shops_users.settings');

  // Prevent shops notification on account activation.
  $configFactory->getEditable('user.settings')->set('notify.status_activated', FALSE)->save();

  // Set default config values from environment variables.
  if ($xml_uri !== FALSE) {
    if ($root_dir !== FALSE) {
      $xml_uri = $root_dir . $xml_uri;
    }
    $shopsUsersConfig->set('xml_uri', $xml_uri)->save();
    $logger->info(t('Shops Users XML path found: @uri', ['@uri' => $xml_uri]));
  }
  if ($email_domain !== FALSE) {
    $shopsUsersConfig->set('email_domain', $email_domain)->save();
    $logger->info(t('Shops Users email domain found: @domain', ['@domain' => $email_domain]));
  }

  // Process import if configuration is correct.
  $manager = \Drupal::service('shops_users.manager');
  if ($manager->isConfigured()) {
    try {
      $manager->blockAllUsers();
      $manager->processXml();
    } catch (\Exception $e) {
      $logger->error($e->getMessage());
    }
  }
  else {
    \Drupal::messenger()->addWarning(t('Please <a href=":config">configure the Shops Users module</a> before using it.', [
      ':config' => Url::fromRoute('shops_users.settings')->toString(),
    ]));
  }
}

/**
 * Add configuration file
 */
function shops_users_update_10001() {
    // Importer les nouvelles configurations de champ.
    \Drupal::service('config.installer')->installDefaultConfig('module', 'shops_users');
}

/**
 * Implements hook_uninstall().
 */
function shops_users_uninstall() {
  \Drupal::service('shops_users.manager')->blockAllUsers();
}
